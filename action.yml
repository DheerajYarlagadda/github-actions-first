name: dheeraj test
description: just to check and get familiarize
inputs:
  name:
    description: my name
    required: true
  echo:
    description: a boolean flag
    required: true

outputs:
  my_dict:
    description: 'Path to the vpf-repository'
    value: ${{ steps.run.outputs.python_output ||  steps.run1.outputs.python_output }} 

runs:
  using: composite
  steps:
    - name: testing powershell
      if: ${{ runner.os == 'Windows'}}
      id: setEnv
      shell: powershell
      run: |
        if($${{ inputs.echo }}) {
          $cmd="Hi ${{ inputs.name }}"
        }else {
          $cmd="echo 'Nothing to say'"
        }
        echo "::set-output name=cmd::$cmd"

    # - name: tree workspace
    #   if: ${{ env.ACTIONS_STEP_DEBUG }}==true || ${{ env.ACTIONS_RUNNER_DEBUG }}==true  
    #   shell: powershell
    #   run: |
    #     tree ${{ github.workspace }}
      
    # - name: Perform operation
    #   if: ${{ runner.os == 'Windows'}}
    #   env: 
    #     CMD: ${{ steps.setEnv.outputs.cmd }}
    #   shell: powershell
    #   run: |
    #     $command=${{ env.CMD }}
    #     echo $command

    - name: Checkout code
      uses: actions/checkout@v2
      with:
          path: repo

    - name: Run Python script
      if: ${{ runner.os == 'Windows'}}
      id: run
      env: 
        CMD: ${{ steps.setEnv.outputs.cmd }}
      shell: powershell
      run: |
        $output=Invoke-Expression -Command "python ${{ github.workspace }}/repo/test.py"
        echo "::set-output name=python_output::$output"

    - name: Run Python script
      if: ${{ runner.os == 'Linux'}}
      id: run1
      shell: bash
      run: |
        output="This is Linux step"
        echo "::set-output name=python_output::$output"

    - name: Use Python output
      if: ${{ runner.os == 'Windows'}}
      shell: powershell
      run: |
        $myOutput='${{ steps.run.outputs.python_output }}'
        echo "Python script output: $myOutput"

    - name: Use Python output
      if: ${{ runner.os == 'Linux'}}
      shell: bash
      run: |
        echo "Python script output: ${{ steps.run1.outputs.python_output }}"

    - name: debug status
      if: ${{ runner.os == 'Windows'}}
      shell: powershell
      run: |
        if (${{ runner.debug }} == 1) {
          echo "in debug mode"
        } else {
          echo "not in debug mode"
        }
